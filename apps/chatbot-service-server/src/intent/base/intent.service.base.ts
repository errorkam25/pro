/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Intent as PrismaIntent } from "@prisma/client";

export class IntentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.IntentCountArgs, "select">): Promise<number> {
    return this.prisma.intent.count(args);
  }

  async intents<T extends Prisma.IntentFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.IntentFindManyArgs>
  ): Promise<PrismaIntent[]> {
    return this.prisma.intent.findMany<Prisma.IntentFindManyArgs>(args);
  }
  async intent<T extends Prisma.IntentFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.IntentFindUniqueArgs>
  ): Promise<PrismaIntent | null> {
    return this.prisma.intent.findUnique(args);
  }
  async createIntent<T extends Prisma.IntentCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.IntentCreateArgs>
  ): Promise<PrismaIntent> {
    return this.prisma.intent.create<T>(args);
  }
  async updateIntent<T extends Prisma.IntentUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.IntentUpdateArgs>
  ): Promise<PrismaIntent> {
    return this.prisma.intent.update<T>(args);
  }
  async deleteIntent<T extends Prisma.IntentDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.IntentDeleteArgs>
  ): Promise<PrismaIntent> {
    return this.prisma.intent.delete(args);
  }
}
